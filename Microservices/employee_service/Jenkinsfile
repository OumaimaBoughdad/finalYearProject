pipeline {
    agent { label 'jenkins-agent' }

    tools {
        maven 'Maven 3.9.9' // Ensure this matches the Maven version configured in Jenkins
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the employee microservice ......  '
                dir('Microservices/employee_service') { // Change to the directory containing pom.xml
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token') {
                        dir('Microservices/employee_service') { // Ensure analysis is run in the correct directory
                            sh 'mvn sonar:sonar'
                        }
                    }
                }
            }
        }
    }
}
