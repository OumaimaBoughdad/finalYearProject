pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the microservice...'
                dir('Microservices/clients_service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('Sonar-6') { // Replace 'Sonar-6' with your SonarQube server configuration name
                    dir('Microservices/clients_service') {
                        sh 'mvn sonar:sonar -Dsonar.host.url=http://13.53.84.227:9000/ -Dsonar.login=sonar-token -Dsonar.projectKey=Prj-Fin-T'
                    }
                }
            }
        }

        stage('Check Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}