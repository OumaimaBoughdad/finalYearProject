spring.application.name=client-service
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

server.port=8383

spring.datasource.url=jdbc:mysql://localhost:3306/clients
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#all the kafka configuration
#kafka properties  configure kafka broker port
spring.kafka.bootstrap-servers=localhost:9092
advertised.listeners=PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9093
#the producer the one who serialize its messages or objets for transform them into kafka topics
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.json.trusted.packages=clients.clients_service.payload.Student


#Make the clients service a consumer
# Kafka deserializer configuration
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Trusted packages for deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=*


#specify the group for the consumer   groupE

spring.kafka.consumer.group-id=groupEm


#
spring.kafka.consumer.properties.spring.json.type.mapping=\ com.example.employee_service.entity.Employee:clients.clients_service.entity.Employee,\
 com.example.compte_service.entity.Client:clients.clients_service.entity.Client





# Configuration du producteur Kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Configurer le timeout des requêtes (optionnel)
spring.kafka.producer.properties.request.timeout.ms=2000

# Activer ou désactiver l'envoi automatique des messages (optionnel)
spring.kafka.producer.properties.enable.idempotence=true

# Configurer les réessais en cas d'échec (optionnel)
spring.kafka.producer.properties.retries=3
